services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
               'kafka-topics --create --topic telemetry.sensors.v1 \
                            --partitions 1 --replication-factor 1 --if-not-exists \
                            --bootstrap-server kafka:29092 && \
               kafka-topics --create --topic telemetry.snapshots.v1 \
                            --partitions 1 --replication-factor 1 --if-not-exists \
                            --bootstrap-server kafka:29092 && \
               kafka-topics --create --topic telemetry.hubs.v1 \
                            --partitions 1 --replication-factor 1 --if-not-exists \
                            --bootstrap-server kafka:29092'"
    init: true

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.3
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  schema-registry-init:
    image: curlimages/curl:8.2.1
    container_name: schema-registry-init
    depends_on:
      - schema-registry
    volumes:
      - ./schemas:/schemas
    command: >
      sh -c "
        until curl -s http://schema-registry:8081; do
          echo 'Waiting for Schema Registry...';
          sleep 2;
        done;
        curl -X POST -H 'Content-Type: application/vnd.schemaregistry.v1+json' \
          --data @/schemas/HubEventAvro.avsc \
          http://schema-registry:8081/subjects/telemetry.hubs.v1-value/versions;
        curl -X POST -H 'Content-Type: application/vnd.schemaregistry.v1+json' \
          --data @/schemas/SensorEventAvro.avsc \
          http://schema-registry:8081/subjects/telemetry.sensors.v1-value/versions;
        echo 'Schemas registered';
      "
    init: true

  sht-db:
    image: postgres:16.1
    container_name: sht-db
    ports:
      - "9432:5432"
    environment:
      - POSTGRES_DB=sht-db
      - POSTGRES_USER=main
      - POSTGRES_PASSWORD=main